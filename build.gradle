plugins {
	id "java"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id "org.springframework.boot" version "2.5.1"					// spring boot
	id "pl.allegro.tech.build.axion-release" version "1.13.2"		// adds versioning with tags
	id "com.palantir.docker" version "0.26.0"						// allow gradle to work with docker
	id "com.palantir.docker-run" version "0.26.0"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation		"org.springframework.boot:spring-boot-starter-web"			// for REST API
	implementation		"org.springframework.boot:spring-boot-starter-actuator"		// health check endpoints
	implementation		"org.springframework.boot:spring-boot-starter-data-jpa"		// database communication
	implementation		"org.springframework.boot:spring-boot-devtools"				// restart after changes
	implementation		"org.springframework.boot:spring-boot-starter-validation"	// validate entities
	implementation		group: "com.h2database", name: "h2", version: "1.4.200"
	implementation 'junit:junit:4.13.1'// in-memory database
	compileOnly			"org.projectlombok:lombok:1.18.20"							// annotation processor
	annotationProcessor	"org.projectlombok:lombok:1.18.20"							// annotation processor
	testImplementation	"org.springframework.boot:spring-boot-starter-test"			// testing
}

test {
	useJUnitPlatform()
}

project.version = scmVersion.version

String imageName = "grigorem/spring-boot-api-example:$version"

docker {
	name imageName
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
	name project.name
	image imageName
	ports "8080:8080"
	clean true
}